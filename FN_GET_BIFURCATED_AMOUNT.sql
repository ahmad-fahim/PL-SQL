CREATE OR REPLACE FUNCTION FN_GET_BIFURCATED_AMOUNT (
   P_ACCOUNT            NUMBER,
   P_ASON_DATE          DATE,
   P_BIFURCATED_PART    CHAR)
   RETURN NUMBER
IS
   V_ASON_YEAR       NUMBER;
   V_ACON_MONTH      NUMBER;
   V_PRIN_OPEN_BAL   NUMBER (18, 3);
   V_INT_OPEN_BAL    NUMBER (18, 3);
   V_CHAR_OPEN_BAL   NUMBER (18, 3);
   V_SQL             VARCHAR2 (3000);
   V_TRAN_AMOUNT     NUMBER (18, 3);
   V_FINAL_AMOUNT    NUMBER (18, 3);
BEGIN
   V_ASON_YEAR := TO_NUMBER (TO_CHAR (P_ASON_DATE, 'YYYY'));
   V_ACON_MONTH := TO_NUMBER (TO_CHAR (P_ASON_DATE, 'MM'));

   BEGIN
      SELECT ADVBBAL_PRIN_BC_OPBAL,
             ADVBBAL_INTRD_BC_OPBAL,
             ADVBBAL_CHARGE_BC_OPBAL
        INTO V_PRIN_OPEN_BAL, V_INT_OPEN_BAL, V_CHAR_OPEN_BAL
        FROM ADVBBAL
       WHERE     ADVBBAL_ENTITY_NUM = 1
             AND ADVBBAL_INTERNAL_ACNUM = P_ACCOUNT
             AND ADVBBAL_CURR_CODE = 'BDT'
             AND ADVBBAL_YEAR = V_ASON_YEAR
             AND ADVBBAL_MONTH = V_ACON_MONTH;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         V_PRIN_OPEN_BAL := 0;
         V_INT_OPEN_BAL := 0;
         V_CHAR_OPEN_BAL := 0;
   END;

   IF P_BIFURCATED_PART = 'P'
   THEN
      V_SQL :=
            'SELECT SUM(CREDIT_AMOUNT) - SUM(DEBIT_AMOUNT) FROM 
(SELECT CASE WHEN TRAN_DB_CR_FLG = ''C'' THEN TRANADV_PRIN_BC_AMT ELSE 0 END
          CREDIT_AMOUNT,
       CASE WHEN TRAN_DB_CR_FLG = ''D'' THEN TRANADV_PRIN_BC_AMT ELSE 0 END
          DEBIT_AMOUNT
  FROM TRAN'
         || V_ASON_YEAR
         || ', TRANADV'
         || V_ASON_YEAR
         || '
 WHERE     TRAN_ENTITY_NUM = 1
       AND TRAN_DATE_OF_TRAN BETWEEN TRUNC (:P_ASON_DATE) - (TO_NUMBER (TO_CHAR (:P_ASON_DATE, ''DD'')) - 1) AND :P_ASON_DATE
       AND TRAN_INTERNAL_ACNUM = :P_ACCOUNT
       AND TRANADV_ENTITY_NUM = TRAN_ENTITY_NUM
       AND TRANADV_BRN_CODE= TRAN_BRN_CODE
       AND TRANADV_DATE_OF_TRAN = TRAN_DATE_OF_TRAN
       AND TRANADV_BATCH_NUMBER = TRAN_BATCH_NUMBER
       AND TRANADV_BATCH_SL_NUM = TRAN_BATCH_SL_NUM 
       AND TRAN_AUTH_BY IS NOT NULL)';
   ELSIF P_BIFURCATED_PART = 'I'
   THEN
      V_SQL :=
            'SELECT SUM(CREDIT_AMOUNT) - SUM(DEBIT_AMOUNT) FROM 
(SELECT CASE WHEN TRAN_DB_CR_FLG = ''C'' THEN TRANADV_INTRD_BC_AMT ELSE 0 END
          CREDIT_AMOUNT,
       CASE WHEN TRAN_DB_CR_FLG = ''D'' THEN TRANADV_INTRD_BC_AMT ELSE 0 END
          DEBIT_AMOUNT
  FROM TRAN'
         || V_ASON_YEAR
         || ', TRANADV'
         || V_ASON_YEAR
         || '
 WHERE     TRAN_ENTITY_NUM = 1
       AND TRAN_DATE_OF_TRAN BETWEEN TRUNC (:P_ASON_DATE) - (TO_NUMBER (TO_CHAR (:P_ASON_DATE, ''DD'')) - 1) AND :P_ASON_DATE
       AND TRAN_INTERNAL_ACNUM = :P_ACCOUNT
       AND TRANADV_ENTITY_NUM = TRAN_ENTITY_NUM
       AND TRANADV_BRN_CODE= TRAN_BRN_CODE
       AND TRANADV_DATE_OF_TRAN = TRAN_DATE_OF_TRAN
       AND TRANADV_BATCH_NUMBER = TRAN_BATCH_NUMBER
       AND TRANADV_BATCH_SL_NUM = TRAN_BATCH_SL_NUM 
       AND TRAN_AUTH_BY IS NOT NULL)';
   ELSE
      V_SQL :=
            'SELECT SUM(CREDIT_AMOUNT) - SUM(DEBIT_AMOUNT) FROM 
(SELECT CASE WHEN TRAN_DB_CR_FLG = ''C'' THEN TRANADV_CHARGE_BC_AMT ELSE 0 END
          CREDIT_AMOUNT,
       CASE WHEN TRAN_DB_CR_FLG = ''D'' THEN TRANADV_CHARGE_BC_AMT ELSE 0 END
          DEBIT_AMOUNT
  FROM TRAN'
         || V_ASON_YEAR
         || ', TRANADV'
         || V_ASON_YEAR
         || '
 WHERE     TRAN_ENTITY_NUM = 1
       AND TRAN_DATE_OF_TRAN BETWEEN TRUNC (:P_ASON_DATE) - (TO_NUMBER (TO_CHAR (:P_ASON_DATE, ''DD'')) - 1) AND :P_ASON_DATE
       AND TRAN_INTERNAL_ACNUM = :P_ACCOUNT
       AND TRANADV_ENTITY_NUM = TRAN_ENTITY_NUM
       AND TRANADV_BRN_CODE= TRAN_BRN_CODE
       AND TRANADV_DATE_OF_TRAN = TRAN_DATE_OF_TRAN
       AND TRANADV_BATCH_NUMBER = TRAN_BATCH_NUMBER
       AND TRANADV_BATCH_SL_NUM = TRAN_BATCH_SL_NUM 
       AND TRAN_AUTH_BY IS NOT NULL)';
   END IF;

   BEGIN
      EXECUTE IMMEDIATE V_SQL
         INTO V_TRAN_AMOUNT
         USING P_ASON_DATE,
               P_ASON_DATE,
               P_ASON_DATE,
               P_ACCOUNT;
   EXCEPTION
      WHEN OTHERS
      THEN
         V_TRAN_AMOUNT := 0;
   END;

   IF P_BIFURCATED_PART = 'P'
   THEN
      V_FINAL_AMOUNT := V_PRIN_OPEN_BAL + V_TRAN_AMOUNT;
   ELSIF P_BIFURCATED_PART = 'I'
   THEN
      V_FINAL_AMOUNT := V_INT_OPEN_BAL + V_TRAN_AMOUNT;
   ELSE
      V_FINAL_AMOUNT := V_CHAR_OPEN_BAL + V_TRAN_AMOUNT;
   END IF;

   RETURN V_FINAL_AMOUNT;
END FN_GET_BIFURCATED_AMOUNT;