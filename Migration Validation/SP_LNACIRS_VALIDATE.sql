CREATE OR REPLACE PROCEDURE SP_LNACIRS_VALIDATE(P_BRANCH_CODE IN NUMBER,
                                             P_START_DATE  IN DATE) IS
  W_ROWCOUNT NUMBER := 0;

BEGIN
  DELETE FROM ERRORLOG WHERE TEMPLATE_NAME = 'MIG_LNACIRS';
  COMMIT;
  UPDATE MIG_LNACIRS SET LNACIRS_EFF_DATE = P_START_DATE;
  COMMIT;
  --- checking  LNACIRS_ACNUM  in MIG_ACNTS loan account

  SELECT COUNT(*)
    INTO W_ROWCOUNT
    FROM MIG_LNACIRS
   WHERE LNACIRS_ACNUM NOT IN
         (SELECT ACNTS_ACNUM
            FROM MIG_ACNTS
           WHERE ACNTS_PROD_CODE IN
                 (SELECT PRODUCT_CODE
                    FROM PRODUCTS
                   WHERE PRODUCT_FOR_LOANS = 1));

  IF W_ROWCOUNT > 0 THEN

    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('MIG_LNACIRS',
       'LNACIRS_ACNUM',
       W_ROWCOUNT,
       'LNACIRS_ACNUM NOT IN LOAN ACCOUNTS OF MIG_ACNTS',
       'SELECT *  FROM MIG_LNACIRS WHERE LNACIRS_ACNUM
        NOT IN (SELECT ACNTS_ACNUM FROM MIG_ACNTS WHERE ACNTS_PROD_CODE IN
        (SELECT PRODUCT_CODE FROM PRODUCTS WHERE PRODUCT_FOR_LOANS = 1));');

  END IF;

  -- checking if applied interest rate is null

SELECT COUNT(*)
  INTO W_ROWCOUNT
  FROM MIG_LNACIRS
 WHERE NVL(LNACIRS_APPL_INT_RATE, 0) = 0
   AND LNACIRS_ACNUM NOT IN
       (SELECT ACNTS_ACNUM FROM MIG_ACNTS WHERE ACNTS_PROD_CODE IN (2042, 2107,2029));
       

  IF W_ROWCOUNT > 0 THEN

    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('MIG_LNACIRS',
       'LNACIRS_APPL_INT_RATE',
       W_ROWCOUNT,
       'LNACIRS_APPL_INT_RATE CANNOT BE NULL OR ZERO',
       'SELECT LNACIRS_ACNUM, LNACIRS_APPL_INT_RATE
  FROM MIG_LNACIRS
 WHERE NVL(LNACIRS_APPL_INT_RATE, 0) = 0
   AND LNACIRS_ACNUM NOT IN
       (SELECT ACNTS_ACNUM FROM MIG_ACNTS WHERE ACNTS_PROD_CODE IN (2042, 2107,2029));');

  END IF;



END SP_LNACIRS_VALIDATE;
/