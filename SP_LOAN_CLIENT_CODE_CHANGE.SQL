CREATE TABLE CLIENT_CHANGE(
SB_AC_NUM VARCHAR2(13),
LOAN_AC_NUM VARCHAR2(13),
LOAN_CLIENT NUMBER(12),
LOAN_CLIENT_SHOULD_BE NUMBER(12));

SELECT * FROM CLIENT_CHANGE;

BEGIN
FOR IDX IN (
SELECT IACLINK_ACTUAL_ACNUM , IACLINK_CIF_NUMBER  FROM IACLINK ,CLIENT_CHANGE 
WHERE IACLINK_ENTITY_NUM = 1
AND IACLINK_ACTUAL_ACNUM = LOAN_AC_NUM ) LOOP
UPDATE CLIENT_CHANGE SET LOAN_CLIENT = IDX.IACLINK_CIF_NUMBER
WHERE  LOAN_AC_NUM = IDX.IACLINK_ACTUAL_ACNUM ;
END LOOP;
END ;


BEGIN
FOR IDX IN (
SELECT IACLINK_ACTUAL_ACNUM , IACLINK_CIF_NUMBER  FROM IACLINK ,CLIENT_CHANGE 
WHERE IACLINK_ENTITY_NUM = 1
AND IACLINK_ACTUAL_ACNUM = SB_AC_NUM ) LOOP
UPDATE CLIENT_CHANGE SET LOAN_CLIENT_SHOULD_BE = IDX.IACLINK_CIF_NUMBER
WHERE  SB_AC_NUM = IDX.IACLINK_ACTUAL_ACNUM ;
END LOOP;
END ;

































CREATE OR REPLACE PROCEDURE SP_LOAN_CLIENT_CODE_CHANGE (P_LOAN_AC_NUM         VARCHAR2,
                                               P_CURRENT_CLIENT      NUMBER,
                                               P_CLIENT_SHOULD_BE    NUMBER)
AS
   V_NEW_CLIENT_LIMIT_NUMBER    NUMBER;
   V_NEW_CLIENT_SEQUENCE        NUMBER;
   V_PROD_CODE                  NUMBER;
   V_BRN_CODE                   NUMBER;
   V_INTERNAL_AC_NUM            NUMBER;
   V_ACASLLDTL_LIMIT_LINE_NUM   NUMBER;
   V_SECAGMTBAL_SEC_NUM         NUMBER;
   V_COUNT                      NUMBER;
BEGIN
  <<INFO_FROM_IACLINK>>
   BEGIN
      SELECT IACLINK_INTERNAL_ACNUM, IACLINK_BRN_CODE, IACLINK_PROD_CODE
        INTO V_INTERNAL_AC_NUM, V_BRN_CODE, V_PROD_CODE
        FROM IACLINK
       WHERE IACLINK_ENTITY_NUM = 1 AND IACLINK_ACTUAL_ACNUM = P_LOAN_AC_NUM;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         RETURN;
   END INFO_FROM_IACLINK;

  <<MAX_SEQ_NUM>>
   BEGIN
      SELECT MAX (ACNTLINK_AC_SEQ_NUM)
        INTO V_NEW_CLIENT_SEQUENCE
        FROM ACNTLINK
       WHERE     ACNTLINK_ENTITY_NUM = 1
             AND ACNTLINK_BRN_CODE = V_BRN_CODE
             AND ACNTLINK_CIF_NUMBER = P_CLIENT_SHOULD_BE
             AND SUBSTR (ACNTLINK_AC_SEQ_NUM, 1, 4) = V_PROD_CODE;

      V_NEW_CLIENT_SEQUENCE := V_NEW_CLIENT_SEQUENCE + 1;

      IF V_NEW_CLIENT_SEQUENCE IS NULL
      THEN
         V_NEW_CLIENT_SEQUENCE := TO_NUMBER (V_PROD_CODE || '01');
      END IF;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         V_NEW_CLIENT_SEQUENCE := TO_NUMBER (V_PROD_CODE || '01');
   END MAX_SEQ_NUM;

  <<MAX_LIMIT_LINE>>
   BEGIN
      SELECT MAX (LMTLINE_NUM)
        INTO V_NEW_CLIENT_LIMIT_NUMBER
        FROM LIMITLINE
       WHERE     LMTLINE_ENTITY_NUM = 1
             AND LMTLINE_CLIENT_CODE = P_CLIENT_SHOULD_BE;

      V_NEW_CLIENT_LIMIT_NUMBER := V_NEW_CLIENT_LIMIT_NUMBER + 1;

      IF V_NEW_CLIENT_LIMIT_NUMBER IS NULL
      THEN
         V_NEW_CLIENT_LIMIT_NUMBER := 1;
      END IF;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         V_NEW_CLIENT_LIMIT_NUMBER := 1;
   END MAX_LIMIT_LINE;


  <<UPDATE_ACNTLINK>>
   BEGIN
      UPDATE ACNTLINK
         SET ACNTLINK_CIF_NUMBER = P_CLIENT_SHOULD_BE,
             ACNTLINK_AC_SEQ_NUM = V_NEW_CLIENT_SEQUENCE,
             ACNTLINK_ACCOUNT_NUMBER =
                   V_BRN_CODE
                || LPAD (P_CLIENT_SHOULD_BE, 12, 0)
                || V_NEW_CLIENT_SEQUENCE
       WHERE     ACNTLINK_ENTITY_NUM = 1
             AND ACNTLINK_INTERNAL_ACNUM = V_INTERNAL_AC_NUM;
   END UPDATE_ACNTLINK;


  <<UPDATE_ACNTS>>
   BEGIN
      UPDATE ACNTS
         SET ACNTS_CLIENT_NUM = P_CLIENT_SHOULD_BE,
             ACNTS_AC_SEQ_NUM = V_NEW_CLIENT_SEQUENCE,
             ACNTS_ACCOUNT_NUMBER =
                   V_BRN_CODE
                || LPAD (P_CLIENT_SHOULD_BE, 12, 0)
                || V_NEW_CLIENT_SEQUENCE
       WHERE     ACNTS_ENTITY_NUM = 1
             AND ACNTS_INTERNAL_ACNUM = V_INTERNAL_AC_NUM;
   END UPDATE_ACNTS;


  <<UPDATE_IACLINK>>
   BEGIN
      UPDATE IACLINK
         SET IACLINK_CIF_NUMBER = P_CLIENT_SHOULD_BE,
             IACLINK_AC_SEQ_NUM = V_NEW_CLIENT_SEQUENCE,
             IACLINK_ACCOUNT_NUMBER =
                   V_BRN_CODE
                || LPAD (P_CLIENT_SHOULD_BE, 12, 0)
                || V_NEW_CLIENT_SEQUENCE
       WHERE     IACLINK_ENTITY_NUM = 1
             AND IACLINK_INTERNAL_ACNUM = V_INTERNAL_AC_NUM;
   END UPDATE_IACLINK;


  <<UPDATE_LLACNTOS>>
   BEGIN
      UPDATE LLACNTOS
         SET LLACNTOS_CLIENT_CODE = P_CLIENT_SHOULD_BE,
             LLACNTOS_LIMIT_LINE_NUM = V_NEW_CLIENT_LIMIT_NUMBER
       WHERE     LLACNTOS_ENTITY_NUM = 1
             AND LLACNTOS_CLIENT_ACNUM = V_INTERNAL_AC_NUM;
   END UPDATE_LLACNTOS;


  <<UPDATE_TRAN2016>>
   BEGIN
      UPDATE TRAN2016
         SET TRAN_PROFIT_CUST_CODE = P_CLIENT_SHOULD_BE
       WHERE TRAN_ENTITY_NUM = 1 AND TRAN_INTERNAL_ACNUM = V_INTERNAL_AC_NUM;
   END UPDATE_TRAN2016;

   SELECT ACASLLDTL_LIMIT_LINE_NUM
     INTO V_ACASLLDTL_LIMIT_LINE_NUM
     FROM ACASLLDTL
    WHERE     ACASLLDTL_ENTITY_NUM = 1
          AND ACASLLDTL_INTERNAL_ACNUM = V_INTERNAL_AC_NUM;

  <<UPDATE_ACASLLDTL>>
   BEGIN
      UPDATE ACASLLDTL
         SET ACASLLDTL_CLIENT_NUM = P_CLIENT_SHOULD_BE,
             ACASLLDTL_LIMIT_LINE_NUM = V_NEW_CLIENT_LIMIT_NUMBER
       WHERE     ACASLLDTL_ENTITY_NUM = 1
             AND ACASLLDTL_INTERNAL_ACNUM = V_INTERNAL_AC_NUM;
   END UPDATE_ACASLLDTL;

  <<UPDATE_ACASLL>>
   BEGIN
      UPDATE ACASLL
         SET ACASLL_CLIENT_NUM = P_CLIENT_SHOULD_BE,
             ACASLL_LIMIT_LINE_NUM = V_NEW_CLIENT_LIMIT_NUMBER
       WHERE     ACASLL_ENTITY_NUM = 1
             AND ACASLL_CLIENT_NUM = P_CURRENT_CLIENT
             AND ACASLL_LIMIT_LINE_NUM = V_ACASLLDTL_LIMIT_LINE_NUM;
   END UPDATE_ACASLL;

  <<UPDATE_LIMITLINE>>
   BEGIN
      UPDATE LIMITLINE
         SET LMTLINE_CLIENT_CODE = P_CLIENT_SHOULD_BE,
             LMTLINE_NUM = V_NEW_CLIENT_LIMIT_NUMBER
       WHERE     LMTLINE_ENTITY_NUM = 1
             AND LMTLINE_CLIENT_CODE = P_CURRENT_CLIENT
             AND LMTLINE_NUM = V_ACASLLDTL_LIMIT_LINE_NUM;
   END UPDATE_LIMITLINE;


  <<UPDATE_LIMITLINEHIST>>
   BEGIN
      UPDATE LIMITLINEHIST
         SET LIMLNEHIST_CLIENT_CODE = P_CLIENT_SHOULD_BE,
             LIMLNEHIST_LIMIT_LINE_NUM = V_NEW_CLIENT_LIMIT_NUMBER
       WHERE     LIMLNEHIST_ENTITY_NUM = 1
             AND LIMLNEHIST_CLIENT_CODE = P_CURRENT_CLIENT
             AND LIMLNEHIST_LIMIT_LINE_NUM = V_ACASLLDTL_LIMIT_LINE_NUM;
   END UPDATE_LIMITLINEHIST;

   SELECT SECAGMTBAL_SEC_NUM
     INTO V_SECAGMTBAL_SEC_NUM
     FROM SECASSIGNMTBAL
    WHERE     SECAGMTBAL_ENTITY_NUM = 1
          AND SECAGMTBAL_CLIENT_NUM = P_CURRENT_CLIENT
          AND SECAGMTBAL_LIMIT_LINE_NUM = V_ACASLLDTL_LIMIT_LINE_NUM;


  <<UPDATE_SECRCPT>>
   BEGIN
      UPDATE SECRCPT
         SET SECRCPT_CLIENT_NUM = P_CLIENT_SHOULD_BE
       WHERE     SECRCPT_ENTITY_NUM = 1
             AND SECRCPT_SECURITY_NUM = V_SECAGMTBAL_SEC_NUM;
   END UPDATE_SECRCPT;


  <<UPDATE_SECASSIGNMTBAL>>
   BEGIN
      -- , SECAGMTBAL_CLIENT_NUM, SECAGMTBAL_LIMIT_LINE_NUM
      UPDATE SECASSIGNMTBAL
         SET SECAGMTBAL_CLIENT_NUM = P_CLIENT_SHOULD_BE,
             SECAGMTBAL_LIMIT_LINE_NUM = V_NEW_CLIENT_LIMIT_NUMBER
       WHERE     SECAGMTBAL_ENTITY_NUM = 1
             AND SECAGMTBAL_SEC_NUM = V_SECAGMTBAL_SEC_NUM;
   END UPDATE_SECASSIGNMTBAL;

  <<UPDATE_AMLACNTCL>>
   BEGIN
      UPDATE AMLACNTCL
         SET AMLACNTCL_CLIENT_CODE = P_CLIENT_SHOULD_BE
       WHERE     AMLACNTCL_ENTITY_NUM = 1
             AND AMLACNTCL_INTERNAL_ACNUM = V_INTERNAL_AC_NUM;
   END UPDATE_AMLACNTCL;

  <<UPDATE_CLCHGWAIVEDTL>>
   BEGIN
      UPDATE CLCHGWAIVEDTL
         SET CLCHGWAIVDT_CLIENT_NUM = P_CLIENT_SHOULD_BE
       WHERE     CLCHGWAIVDT_ENTITY_NUM = 1
             AND CLCHGWAIVDT_INTERNAL_ACNUM = V_INTERNAL_AC_NUM
             AND CLCHGWAIVDT_CLIENT_NUM > 0;
   END UPDATE_CLCHGWAIVEDTL;

  <<UPDATE_CLCHGWAIVEDTLHIST>>
   BEGIN
      UPDATE CLCHGWAIVEDTLHIST
         SET CLCHGWAIVDTHIST_CLIENT_NUM = P_CLIENT_SHOULD_BE
       WHERE     CLCHGWAIVDTHIST_ENTITY_NUM = 1
             AND CLCHGWAIVDTHIST_INT_ACNUM = V_INTERNAL_AC_NUM
             AND CLCHGWAIVDTHIST_CLIENT_NUM > 0;
   END UPDATE_CLCHGWAIVEDTLHIST;

  <<UPDATE_LIMFACCURR>>
   BEGIN
      INSERT INTO LIMFACCURR (LFCURR_ENTITY_NUM,
                              LFCURR_CLIENT_NUM,
                              LFCURR_LIMIT_LINE_NUM,
                              LFCURR_CURR_CODE)
           VALUES (1,
                   P_CLIENT_SHOULD_BE,
                   V_NEW_CLIENT_LIMIT_NUMBER,
                   'BDT');
   END UPDATE_LIMFACCURR;



  <<UPDATE_LIMITSERIAL>>
   BEGIN
      SELECT COUNT (*)
        INTO V_COUNT
        FROM LIMITSERIAL
       WHERE LMTSL_ENTITY_NUM = 1 AND LMTSL_CLIENT_CODE = P_CLIENT_SHOULD_BE;

      IF V_COUNT = 0
      THEN
         INSERT
           INTO LIMITSERIAL (LMTSL_ENTITY_NUM,
                             LMTSL_CLIENT_CODE,
                             LMTSL_LAST_SL)
         VALUES (1, P_CLIENT_SHOULD_BE, 1);
      ELSE
         UPDATE LIMITSERIAL
            SET LMTSL_LAST_SL = LMTSL_LAST_SL + 1
          WHERE     LMTSL_ENTITY_NUM = 1
                AND LMTSL_CLIENT_CODE = P_CLIENT_SHOULD_BE;
      END IF;
   END UPDATE_LIMITSERIAL;

  <<UPDATE_SECASSIGNMTDTL>>
   BEGIN
      UPDATE SECASSIGNMTDTL
         SET SECAGMTDTL_CLIENT_NUM = P_CLIENT_SHOULD_BE
       WHERE     SECAGMTDTL_ENTITY_NUM = 1
             AND SECAGMTDTL_SEC_NUM = V_SECAGMTBAL_SEC_NUM;
   END UPDATE_SECASSIGNMTDTL;

  <<UPDATE_SECASSIGNMTDBAL>>
   BEGIN
      UPDATE SECASSIGNMTDBAL
         SET SECAGMTDBAL_CLIENT_NUM = P_CLIENT_SHOULD_BE,
             SECAGMTDBAL_LIMIT_LINE_NUM = V_NEW_CLIENT_LIMIT_NUMBER
       WHERE     SECAGMTDBAL_ENTITY_NUM = 1
             AND SECAGMTDBAL_SEC_NUM = V_SECAGMTBAL_SEC_NUM;
   END UPDATE_SECASSIGNMTDBAL;
   
   
   COMMIT ;
   /*  Update to be done in this tables

-- ACASLL   
-- ACASLLDTL
-- ACNTLINK
-- ACNTS
-- IACLINK
-- LIMITLINE
-- LIMITLINEHIST
-- LLACNTOS
-- SECASSIGNMTBAL
-- SECRCPT
-- TRAN2016
-- AMLACNTCL
-- CLCHGWAIVEDTL
-- CLCHGWAIVEDTLHIST
-- LIMFACCURR
-- LIMITSERIAL
-- SECASSIGNMTDTL
-- SECASSIGNMTDBAL
   */

EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.PUT_LINE (P_LOAN_AC_NUM);
END SP_LOAN_CLIENT_CODE_CHANGE;
/